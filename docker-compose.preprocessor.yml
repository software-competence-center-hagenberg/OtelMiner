name: preprocessor
services:
  db-initializer:
    build:
      context: java
      dockerfile: ./db-initializer/Dockerfile
      args:
        ARTIFACT_ID: db-initializer
    restart: on-failure
  rabbitmq-server:
    user: "1000:1000"
    ports:
      - "5672:5672"
    cap_drop:
      - "ALL"
    security_opt:
      - "no-new-privileges"
    image: rabbitmq:3-management-alpine
    restart: no
  database:
    # must be run as root. But can be stripped of some capabilities
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_READ_SEARCH
      - FOWNER
      - SETGID
      - SETUID
    security_opt:
      - "no-new-privileges=true"
    image: postgres:16.1
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: db-user
      POSTGRES_PASSWORD: super-secure-12345
      POSTGRES_HOST: postgres
    volumes:
      - db-volume:/var/lib/postgresql/data
    restart: no
  db-service:
    user: "1000:1000"
    cap_drop:
      - ALL
    security_opt:
      - "no-new-privileges=true"
    ports:
      - "4242:4242"
    restart: no
    build:
      context: java
      dockerfile: ./Dockerfile
      args:
        ARTIFACT_ID: db-service
    depends_on:
      - database
  model-generator:
    user: "1000:1000"
    cap_drop:
      - ALL
    security_opt:
      - "no-new-privileges=true"
    build:
      context: java
      dockerfile: ./Dockerfile
      args:
        ARTIFACT_ID: model-generator
    restart: no #on-failure
    depends_on:
      - rabbitmq-server
  dashboard-preprocessor:
    #user: "1000:1000"
    ports:
      - "3000:3000"
    build:
      context: typescript
      dockerfile: ./preprocessor.Dockerfile
    restart: no
  otel-preprocessor:
    # runs as non-root user opam
    build:
      context: ocaml
      dockerfile: ./preprocessor.Dockerfile
    restart: on-failure
volumes:
  db-volume:
networks:
  default:
    name: "preprocessing-project-network"
#    external: true
